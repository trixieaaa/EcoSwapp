document.addEventListener('DOMContentLoaded', () => {
    initModal();
    loadPage('home');
    
    document.querySelectorAll('nav a').forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            const page = e.target.getAttribute('href').substring(1);
            loadPage(page);
        });
    });
});

function loadPage(page) {
    showLoader();
    const pages = {
        home: `
            <section class="hero">
                <h1>–î–∞–¥–∏–º –≤–µ—â–∞–º –≤—Ç–æ—Ä—É—é –∂–∏–∑–Ω—å! ‚ôª</h1>
                <p>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É EcoSwap</p>
                <button onclick="loadPage('catalog')">–°–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥</button>
                <div class="carousel-container">
                    <div class="carousel" id="ecoCarousel">
                        <div class="carousel-item active">
                            <img src="https://images.unsplash.com/photo-1600585154340-be6161a56a0c" alt="–≠–∫–æ-—Å–æ–≤–µ—Ç 1">
                            <div class="carousel-caption">–°–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –º—É—Å–æ—Ä –¥–ª—è –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏</div>
                        </div>
                        <div class="carousel-item">
                            <img src="https://images.unsplash.com/photo-1542601906990-b4d3fb778b09" alt="–≠–∫–æ-—Å–æ–≤–µ—Ç 2">
                            <div class="carousel-caption">–û–±–º–µ–Ω–∏–≤–∞–π—Ç–µ—Å—å –≤–µ—â–∞–º–∏ –≤–º–µ—Å—Ç–æ –ø–æ–∫—É–ø–∫–∏ –Ω–æ–≤—ã—Ö</div>
                        </div>
                        <div class="carousel-item">
                            <img src="https://images.unsplash.com/photo-1519681393784-d120267933ba" alt="–≠–∫–æ-—Å–æ–≤–µ—Ç 3">
                            <div class="carousel-caption">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã</div>
                        </div>
                    </div>
                    <button class="carousel-control prev" onclick="changeSlide(-1)">‚ùÆ</button>
                    <button class="carousel-control next" onclick="changeSlide(1)">‚ùØ</button>
                </div>
                <div class="stats">
                    <div class="stat-item">
                        <h3>${getTotalItems()}+</h3>
                        <p>–í–µ—â–µ–π –æ–±–º–µ–Ω—è–Ω–æ</p>
                    </div>
                    <div class="stat-item">
                        <h3>${getTotalUsers()}+</h3>
                        <p>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
                    </div>
                </div>
            </section>
            <section class="join-us">
                <h2>–ü–æ—á–µ–º—É EcoSwap?</h2>
                <div class="benefits-grid">
                    <div class="benefit-item">
                        <h3>–≠–∫–æ–ª–æ–≥–∏—è</h3>
                        <p>–°–æ–∫—Ä–∞—â–∞–π—Ç–µ –æ—Ç—Ö–æ–¥—ã, –¥–∞—Ä–∏—Ç–µ –≤–µ—â–∞–º –≤—Ç–æ—Ä—É—é –∂–∏–∑–Ω—å.</p>
                    </div>
                    <div class="benefit-item">
                        <h3>–≠–∫–æ–Ω–æ–º–∏—è</h3>
                        <p>–û–±–º–µ–Ω–∏–≤–∞–π—Ç–µ—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ, —ç–∫–æ–Ω–æ–º—å—Ç–µ –¥–µ–Ω—å–≥–∏.</p>
                    </div>
                    <div class="benefit-item">
                        <h3>–°–æ–æ–±—â–µ—Å—Ç–≤–æ</h3>
                        <p>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º.</p>
                    </div>
                </div>
                <button onclick="loadPage('add-item')">–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é –≤–µ—â—å</button>
            </section>
        `,
        catalog: `
            <h2>–ö–∞—Ç–∞–ª–æ–≥ –≤–µ—â–µ–π</h2>
            <div class="filter">
                <select id="categoryFilter">
                    <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                    <option value="clothes">–û–¥–µ–∂–¥–∞</option>
                    <option value="books">–ö–Ω–∏–≥–∏</option>
                    <option value="electronics">–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞</option>
                </select>
            </div>
            <div class="items-grid" id="itemsGrid"></div>
        `,
        'add-item': `
            <div class="form-container">
                <h2>–î–æ–±–∞–≤–∏—Ç—å –≤–µ—â—å</h2>
                <form id="addItemForm">
                    <div class="form-group">
                        <label>–ù–∞–∑–≤–∞–Ω–∏–µ:</label>
                        <input type="text" id="itemName" required>
                    </div>
                    <div class="form-group">
                        <label>–û–ø–∏—Å–∞–Ω–∏–µ:</label>
                        <textarea id="itemDescription" required></textarea>
                    </div>
                    <div class="form-group">
                        <label>–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–µ–Ω–∏—è:</label>
                        <input type="text" id="itemAddress" required>
                    </div>
                    <div class="form-group">
                        <label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</label>
                        <select id="itemCategory" required>
                            <option value="clothes">–û–¥–µ–∂–¥–∞</option>
                            <option value="books">–ö–Ω–∏–≥–∏</option>
                            <option value="electronics">–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>–§–æ—Ç–æ (–¥–æ 5 –ú–ë):</label>
                        <input type="file" id="itemImage" accept="image/*">
                    </div>
                    <button type="submit">–î–æ–±–∞–≤–∏—Ç—å –≤–µ—â—å</button>
                </form>
            </div>
        `,
        contact: `
            <div class="form-container">
                <h2>–ö–æ–Ω—Ç–∞–∫—Ç—ã</h2>
                <p>‚úâÔ∏è Email: contact@ecoswap.com</p>
                <p>üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (776) 228-45-67</p>
                <h3>–§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏</h3>
                <form id="contactForm">
                    <div class="form-group">
                        <label>–í–∞—à–µ –∏–º—è:</label>
                        <input type="text" required>
                    </div>
                    <div class="form-group">
                        <label>–°–æ–æ–±—â–µ–Ω–∏–µ:</label>
                        <textarea required></textarea>
                    </div>
                    <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
                </form>
            </div>
        `
    };

    const content = document.getElementById('content');
    content.innerHTML = pages[page] || '<h2>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h2>';
    
    switch(page) {
        case 'home':
            initCarousel();
            break;
        case 'catalog':
            initCategoryFilter();
            loadItems();
            break;
        case 'add-item':
            initAddItemForm();
            break;
    }
    
    hideLoader();
    window.scrollTo(0, 0);
}

function initCarousel() {
    let slideIndex = 0;
    const slides = document.querySelectorAll('.carousel-item');
    const totalSlides = slides.length;

    function showSlide(index) {
        slides.forEach((slide, i) => {
            slide.classList.toggle('active', i === index);
        });
    }

    window.changeSlide = (n) => {
        slideIndex = (slideIndex + n + totalSlides) % totalSlides;
        showSlide(slideIndex);
    };

    // Auto-advance carousel every 5 seconds
    setInterval(() => {
        changeSlide(1);
    }, 5000);

    showSlide(slideIndex);
}

function initCategoryFilter() {
    const filter = document.getElementById('categoryFilter');
    if(filter) {
        filter.addEventListener('change', () => {
            showLoader();
            setTimeout(loadItems, 300);
        });
    }
}

function loadItems() {
    const category = document.getElementById('categoryFilter')?.value || 'all';
    const items = JSON.parse(localStorage.getItem('items')) || [];
    const filteredItems = category === 'all' ? items : items.filter(item => item.category === category);
    
    const grid = document.getElementById('itemsGrid');
    if(grid) {
        grid.innerHTML = filteredItems.map(item => `
            <div class="item-card">
                ${item.image ? `
                    <img src="${item.image}" 
                        class="item-image" 
                        alt="${item.name.replace(/"/g, '"')}"
                        onclick="openModal('${item.image.replace(/'/g, "\\'")}', '${item.name.replace(/'/g, "\\'")}')">` : ''}
                <h3>${item.name}</h3>
                <p>${item.description}</p>
                <div class="item-details">
                    <div class="detail-item">
                        <span>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span> ${getCategoryName(item.category)}
                    </div>
                    <div class="detail-item">
                        <span>–ê–¥—Ä–µ—Å:</span> 
                        <span class="address">${item.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                    </div>
                    <div class="detail-item">
                        <span>–î–æ–±–∞–≤–ª–µ–Ω–æ:</span> 
                        ${new Date(item.id).toLocaleDateString()}
                    </div>
                </div>
                <button onclick="takeItem('${item.id}')">–ó–∞–±—Ä–∞—Ç—å</button>
            </div>
        `).join('');
    }
}

function getCategoryName(category) {
    const categories = {
        clothes: '–û–¥–µ–∂–¥–∞',
        books: '–ö–Ω–∏–≥–∏',
        electronics: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞'
    };
    return categories[category] || '–î—Ä—É–≥–æ–µ';
}

function initAddItemForm() {
    const form = document.getElementById('addItemForm');
    if(form) {
        form.onsubmit = (e) => {
            e.preventDefault();
            const newItem = {
                id: Date.now(),
                name: document.getElementById('itemName').value,
                description: document.getElementById('itemDescription').value,
                address: document.getElementById('itemAddress').value,
                category: document.getElementById('itemCategory').value,
                image: ''
            };

            const fileInput = document.getElementById('itemImage');
            if(fileInput.files[0]) {
                if(fileInput.files[0].size > 5 * 1024 * 1024) {
                    showNotification('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π! –ú–∞–∫—Å–∏–º—É–º 5 –ú–ë');
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = (e) => {
                    newItem.image = e.target.result;
                    saveItem(newItem);
                };
                reader.readAsDataURL(fileInput.files[0]);
            } else {
                saveItem(newItem);
            }
        };
    }
}

function saveItem(item) {
    const items = JSON.parse(localStorage.getItem('items')) || [];
    items.push(item);
    localStorage.setItem('items', JSON.stringify(items));
    showNotification('–í–µ—â—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
    loadPage('catalog');
}

function takeItem(itemId) {
    if(!confirm('–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å —ç—Ç—É –≤–µ—â—å?')) return;
    showLoader();
    setTimeout(() => {
        let items = JSON.parse(localStorage.getItem('items')) || [];
        items = items.filter(item => item.id != itemId);
        localStorage.setItem('items', JSON.stringify(items));
        loadItems();
        hideLoader();
        showNotification('–í–µ—â—å —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–Ω–∞!');
    }, 300);
}

function initModal() {
    const modal = document.getElementById('imageModal');
    const span = document.querySelector('.close');
    
    if(modal && span) {
        span.onclick = () => {
            modal.style.display = "none";
            document.removeEventListener('keydown', handleEsc);
        };
        
        window.onclick = (event) => {
            if(event.target == modal) {
                modal.style.display = "none";
                document.removeEventListener('keydown', handleEsc);
            }
        };
        
        const handleEsc = (e) => {
            if(e.key === 'Escape') {
                modal.style.display = "none";
                document.removeEventListener('keydown', handleEsc);
            }
        };
        
        document.addEventListener('keydown', handleEsc);
    }
}

function openModal(imageSrc, title) {
    const modal = document.getElementById('imageModal');
    const modalImg = document.getElementById('modalImage');
    const captionText = document.getElementById('caption');
    
    if(modal && modalImg && captionText) {
        modal.style.display = "block";
        modalImg.src = imageSrc;
        captionText.textContent = title;
    }
}

function showNotification(message, duration = 3000) {
    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.textContent = message;
    document.body.appendChild(notification);
    notification.style.display = 'block';
    setTimeout(() => notification.remove(), duration);
}

function showLoader() {
    const loader = document.createElement('div');
    loader.className = 'loader';
    document.body.appendChild(loader);
    loader.style.display = 'block';
}

function hideLoader() {
    const loader = document.querySelector('.loader');
    if (loader) {
        loader.remove();
    }
}

function getTotalItems() {
    return JSON.parse(localStorage.getItem('items'))?.length || 0;
}

function getTotalUsers() {
    return Math.floor(getTotalItems() * 0.7);
}